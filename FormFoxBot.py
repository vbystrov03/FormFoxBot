import telebot
import psycopg2
from psycopg2.extras import RealDictCursor
from datetime import datetime

API_TOKEN = '7645647001:AAEMeDbIehBAjAIkxGHa42oX-VdUTKamfAY'
CHANNEL_ID = '@formfox'  # –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID –∫–∞–Ω–∞–ª–∞
bot = telebot.TeleBot(API_TOKEN)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_CONFIG = {
    'dbname': 'formfoxbot',
    'user': 'postgres',
    'password': 'postgres',
    'host': 'localhost'
}

def get_db_connection():
    return psycopg2.connect(**DB_CONFIG)

def send_job_to_channel(job_title, job_description, job_salary, job_location, job_contact, hashtag):
    # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª # –≤ –Ω–∞—á–∞–ª–µ —Ö–µ—à—Ç–µ–≥–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if hashtag.startswith('#'):
        hashtag = hashtag[1:]

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤ Markdown
    message = f"üìù *{job_title.replace('*', '\\*')}*\n" \
              f"üìç {job_location.replace('*', '\\*').replace('_', '\\_')}\n" \
              f"üí∞ {job_salary.replace('*', '\\*').replace('_', '\\_')}\n" \
              f"üì± –ö–æ–Ω—Ç–∞–∫—Ç: {job_contact.replace('*', '\\*').replace('_', '\\_')}\n\n" \
              f"{job_description.replace('*', '\\*').replace('_', '\\_')}\n\n"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ—à—Ç–µ–≥ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ #
    message += f"#{hashtag}"

    bot.send_message(CHANNEL_ID, message, parse_mode="Markdown")



# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_command(message):
    telegram_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name

    with get_db_connection() as conn:
        with conn.cursor() as cursor:
            cursor.execute("""
                INSERT INTO users (telegram_id, username, first_name, last_name)
                VALUES (%s, %s, %s, %s)
                ON CONFLICT (telegram_id) DO NOTHING;
            """, (telegram_id, username, first_name, last_name))
    bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FormFoxBot! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏
@bot.message_handler(commands=['new_job'])
def new_job_command(message):
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏:")
    bot.register_next_step_handler(msg, process_job_title, "job")

def process_job_title(message, hashtag):
    title = message.text
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏:")
    bot.register_next_step_handler(msg, process_job_description, title, hashtag)

def process_job_description(message, title, hashtag):
    description = message.text
    msg = bot.reply_to(message, "–£–∫–∞–∂–∏—Ç–µ –∑–∞—Ä–ø–ª–∞—Ç—É (–µ—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ '–¥–æ–≥–æ–≤–æ—Ä–Ω–∞—è'):")
    bot.register_next_step_handler(msg, process_job_salary, title, description, hashtag)

def process_job_salary(message, title, description, hashtag):
    salary = message.text
    msg = bot.reply_to(message, "–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:")
    bot.register_next_step_handler(msg, process_job_location, title, description, salary, hashtag)

def process_job_location(message, title, description, salary, hashtag):
    location = message.text
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '.', —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç):")
    bot.register_next_step_handler(msg, preview_job, title, description, salary, location, hashtag)

def preview_job(message, title, description, salary, location, hashtag):
    contact = message.text.strip()
    if contact == ".":
        contact = f"@{message.from_user.username}"
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞–∫–∞–Ω—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, UUID)
    job_id = f"{message.from_user.id}_{datetime.now().strftime('%Y%m%d%H%M%S')}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
    preview_message = f"üìù *{title}*\nüìç {location}\nüí∞ {salary}\nüì± –ö–æ–Ω—Ç–∞–∫—Ç: {contact}\n\n{description}"
    preview_msg = bot.reply_to(message, preview_message)

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    confirmation_msg = bot.reply_to(message, "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞–∫–∞–Ω—Å–∏–∏. –í—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ—ë? –û—Ç–≤–µ—Ç—å—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    bot.register_next_step_handler(confirmation_msg, confirm_or_cancel_job, job_id, title, description, salary, location, contact, preview_msg, message, hashtag)

def confirm_or_cancel_job(message, job_id, title, description, salary, location, contact, preview_msg, initial_message, hashtag):
    answer = message.text.strip().lower()
    
    if answer == '–¥–∞':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∫–∞–Ω—Å–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        with get_db_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("""
                    INSERT INTO jobs (job_id, title, description, salary, location, contact, created_at)
                    VALUES (%s, %s, %s, %s, %s, %s, %s);
                """, (job_id, title, description, salary, location, contact, datetime.now()))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∞–∫–∞–Ω—Å–∏—é –≤ –∫–∞–Ω–∞–ª —Å —Ö–µ—à—Ç–µ–≥–æ–º
        send_job_to_channel(title, description, salary, location, contact, f"#formfox #{hashtag}")
        bot.reply_to(message, "–í–∞–∫–∞–Ω—Å–∏—è –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ.")
    elif answer == '–Ω–µ—Ç':
        bot.reply_to(message, "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
        # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
        confirmation_msg = bot.reply_to(message, "–í—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ—ë? –û—Ç–≤–µ—Ç—å—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
        bot.register_next_step_handler(confirmation_msg, confirm_or_cancel_job, job_id, title, description, salary, location, contact, preview_msg, initial_message, hashtag)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
@bot.message_handler(commands=['new_order'])
def new_order_command(message):
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞:")
    bot.register_next_step_handler(msg, process_order_title, "order")

def process_order_title(message, hashtag):
    title = message.text
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞:")
    bot.register_next_step_handler(msg, process_order_description, title, hashtag)

def process_order_description(message, title, hashtag):
    description = message.text
    msg = bot.reply_to(message, "–£–∫–∞–∂–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—É—é —Å—É–º–º–∞:")
    bot.register_next_step_handler(msg, process_order_price, title, description, hashtag)

def process_order_price(message, title, description, hashtag):
    price = message.text
    msg = bot.reply_to(message, "–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:")
    bot.register_next_step_handler(msg, process_order_location, title, description, price, hashtag)

def process_order_location(message, title, description, price, hashtag):
    location = message.text
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '.', —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç):")
    bot.register_next_step_handler(msg, preview_order, title, description, price, location, hashtag)

def preview_order(message, title, description, price, location, hashtag):
    contact = message.text.strip()
    if contact == ".":
        contact = f"@{message.from_user.username}"
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, UUID)
    order_id = f"{message.from_user.id}_{datetime.now().strftime('%Y%m%d%H%M%S')}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
    preview_message = f"üì¶ *{title}*\nüìç {location}\nüíµ {price}\nüì± –ö–æ–Ω—Ç–∞–∫—Ç: {contact}\n\n{description}"
    preview_msg = bot.reply_to(message, preview_message)

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    confirmation_msg = bot.reply_to(message, "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞. –í—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ? –û—Ç–≤–µ—Ç—å—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    bot.register_next_step_handler(confirmation_msg, confirm_or_cancel_order, order_id, title, description, price, location, contact, preview_msg, message, hashtag)

def confirm_or_cancel_order(message, order_id, title, description, price, location, contact, preview_msg, initial_message, hashtag):
    answer = message.text.strip().lower()
    
    if answer == '–¥–∞':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        with get_db_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("""
                    INSERT INTO orders (order_id, title, description, price, location, contact, created_at)
                    VALUES (%s, %s, %s, %s, %s, %s, %s);
                """, (order_id, title, description, price, location, contact, datetime.now()))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ –∫–∞–Ω–∞–ª —Å —Ö–µ—à—Ç–µ–≥–æ–º
        send_job_to_channel(title, description, price, location, contact, f"#formfox #{hashtag}")
        bot.reply_to(message, "–ó–∞–∫–∞–∑ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ.")
    elif answer == '–Ω–µ—Ç':
        bot.reply_to(message, "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
        # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
        confirmation_msg = bot.reply_to(message, "–í—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ? –û—Ç–≤–µ—Ç—å—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")
        bot.register_next_step_handler(confirmation_msg, confirm_or_cancel_order, order_id, title, description, price, location, contact, preview_msg, initial_message, hashtag)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
